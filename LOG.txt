LOG
===
Ik probeer alle overige teksten in het engels te doen, maar hier wil ik snel dingen kunnen noteren en dat gaat nog altijd vlotter in het nederlands.

DOEL: Origele code kunnen starten en debuggen vanuit visual studio

- De originele code blijkt een commandline app in Node JS te zijn.
- In de commandline app kun je op de commandline commandos voor de app in toetsen.
- Als de App gedraait wordt door de game engine neemt hij dit over en voert op dezelfde wijze commando's in.
- De app antwoord desgewenst ook weer op de commandline.
- Node JS dus installeren (zie LINKS.txt).
- Er blijkt een extentions voor visual studio te zijn om met Node JS te werken (zie LINKS.txt).
- Nu blijkt er een javascript Node JS commandline project tempate geinstalleerd te zijn.
- Template gebruikt en hierin de originele code gekopieerd.
- App.js die door de template aangemaakt wordt weg gegooid.
- Applicatie blijkt niet te starten maar zou nu Bot.js moeten starten.
- Je blijkt door met de rechtermuistoets op een Bot.js te klikken deze als node js startup file in te kunnne stellen.
- Op de website van de game de commandos op gezocht. 
- De eerste serie commandos voor het starten van de game in COMMANDS EXAMPLE.txt gezet.
- Nu kun je de app starten in de commando's invoeren op de console app die starten.
- Je kunt nu ook breakpoints in Bot.js in visual studio zetten.

Doel bereikt

DOEL: Node JS code kunnen testen en de specs kunnen debuggen

- Een blog gevonden die het testen van Node JS beschrijft (zie LINKS.txt).
- Buiten deze solution klein testproject opgezet met de code uit de blog.
- Blijkt een zogenaamde npm voor de combinatie jasmine node te zijn.
- npm is de nuget voor node js.
- Ik heb een site gevonden die het gebruik van npm binnen visual studio beschrijft (zie LINKS.txt).
- Nu kan ik op de commandline in de juiste map de spec runnen met node jasmine-node spec/
- Nu het nodige experimenteren ontdekt dat je de spec niet kunnen runnen met Chutzpah (zie LINKS.txt).
- Wil de test in ieder geval kunnen starten vanuit visual studio.
- Ontdekt dat jasmine-node een wrapper is om de echte code (zie LINKS.txt):
node_modules/jasmine-node/lib/jasmine-node/cli.js
- Deze file als node js startup file gezet.
- In de project properties een . als script arguments gezet zodat hij weet waar hij de spec files moet vinden.
- Nu kan ik vanuit visual studio de tests starten en kun je ook een breakpoint in een spec zetten.
- De resultaten van de test zie je in het commandline venster wat opent en niet in de test explorer.

Doel bereikt

DOEL: Uitzoeken hoe je Node JS code schrijft in typescript